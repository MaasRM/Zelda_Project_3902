************************************************************************************************************
								 Team 3, Jared Zins Code Reviews
************************************************************************************************************

Jared Zins: Review  LinkMinimap.cs (Riley) for readability, Review GohmaStateMachine.cs (Nathan) for maintainability

************************************************************************************************************
											Readability
************************************************************************************************************

Jared Zins
4/23/2021
Sprint 5
Review of LinkMinimap.cs
Written by Riley Maas
Number of minutes taken to complete review: 7 minutes

Comments on Readability:
	- This class has 14 methods which makes readability harder
	- Most of the methods are short though which makes up for how many there are
	- There is also a lot of similar code in one method so there isn't much going on
	- Most if statements are to dicern from which section of the map you are in and if you have the map or
	compass

	Overall the code is very readable. The lines that are there are similar to those around it and 
	there are variables with names which help with context of what is happening. This makes it easier 
	to understand what is going on in the class. 

************************************************************************************************************
											Maintainability
************************************************************************************************************

Jared Zins
4/23/2021
Sprint 5
Review of GohmaStateMachine.cs
Written by Nathan Schultz

Comments on Maintainability:
	- There are no many magic numbers at all.
	- There are a lot of variable which give ample control over what the code/Gohma is doing
	- It seems that there is not much that needs to be done. It is all fairly contained.

Hypothetical changes:
	- possibly changing void functions such that they return some kind of value that could be useful where the 
	function is being called. This could also reduce how many methods are needed.


