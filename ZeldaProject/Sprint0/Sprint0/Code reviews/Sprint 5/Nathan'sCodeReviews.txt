************************************************************************************************************
								 Team 3, Nathan Schultz Code Reviews
************************************************************************************************************

Nathan Schultz: Review Shop.cs for readability, LinkPauseScreen.cs for maintainability

************************************************************************************************************
											Readability
************************************************************************************************************

Nathan Schultz 4/23/2021 Sprint5
Shop.cs - Jake Kline
Minutes: 20 
Comments on readability:
	- Variables and methods have clear and distinct names.
	- Only magic numebrs for source rectangles of the shop items.
	- Code is well organized into methods
	- Nothing is too long. Small number of fields and shorter methods.

Overall this class is very readable. All the variables, fields, and methods have clear names which show their functions.
The magic numbers that exist are mainly for rectangle locations for the different items in the shop. All methods are not
too long and thus have clear and concise goals.



************************************************************************************************************
											Maintainability
************************************************************************************************************

Nathan Schultz 4/23/2021 Sprint5
LinkPauseScreen.cs - Riley Maas
Comments on maintainability:
	- Magic numbers are all for Rectangle locations and room numbers in relation to map.
	- Fields and Mehtods clearly show use and functionality.
	- Some repated magic numbers which could be set to constants, altough most are only repeated once or twice

Hypothetical Changes:
	- Try to make some of the magic numbers constants.

Maintinang  the file will not be difficult so long as the sprite sheets and room locations stay the same. The use
of magic numbers for Rectangle locations is not problematic for this reason, but if the sprite sheets did change,
it would be more difficult to update the class. Given that everything that needs to be scaled has a multiplication by
a scale constant, the only real updates would be the positions of HUD contents if they needed to be moved

