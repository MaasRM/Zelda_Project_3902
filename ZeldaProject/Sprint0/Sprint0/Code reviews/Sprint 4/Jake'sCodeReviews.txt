************************************************************************************************************
								 Team 3, Jacob Kline Code Reviews
************************************************************************************************************

Jacob Kline: Review TextSprites.cs(Jared) for readability, Review Sprint3.cs(Jared) for maintainability

************************************************************************************************************
											Readability
************************************************************************************************************

Jacob Kline 4/5/2021 Sprint3
TextSprites.cs - Jared Zins
Minutes: 15
Comments on readability:
	- Fields all make sense. The read only data is somewhat overwhelming with all the magic numbers.
	- Only two methods, draw and update. Fits very well with the xna design framework.
	- Update method very straight forward, just updates a counter.
	- Draw method is a little more complex due to special cases but overall makes sense. Still have some magic numbers in the method

Overall this class is very simple, readable and understandable. My only critique is the structure of the read only data as
well as some magic numbers in the draw method.

************************************************************************************************************
											Maintainability
************************************************************************************************************

Jacob Kline 4/5/2021 Sprint3
Sprint4.cs - Jared Zins
Comments on maintainability:
	- not too many changes other than sound so most comments will be in relation to that
	- Lots of fields, most seam necessary and are straight forward
	- Not much you can do to reduce the size of loadContent. Maybe make a read only list of the string filenames and loop through?
	- These lists being passed around to all different classes makes the classes coupling a lot higher

Hypothetical Changes:
	- I think it could be a good idea to make a soundManager class. Then these lists of sounds won't be passed all around and you can
		just pass the soundManager around instead and get the sounds that way.
	- The other thing I woud maybe change is making a read only list of strings that is the filenames of the soundbites. Then in LoadContent
		you would just loop through the list and create and add the soundEffects that way.

Overall this class is in good shape for maintaining it in the future. My biggest reccomendation is to create a soundManager class instead
of having a bunch of sound data in the main class.